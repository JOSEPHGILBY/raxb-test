{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_parser_configuration.rs","byte_start":154,"byte_end":158,"line_start":3,"line_end":3,"column_start":47,"column_end":51,"is_primary":true,"text":[{"text":"use crate::xml_input_source::{XMLInputSource, self};","highlight_start":47,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"sax/src/xml_parser_configuration.rs","byte_start":152,"byte_end":158,"line_start":3,"line_end":3,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"use crate::xml_input_source::{XMLInputSource, self};","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_parser_configuration.rs:3:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::xml_input_source::{XMLInputSource, self};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `istr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":472,"byte_end":476,"line_start":12,"line_end":12,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":472,"byte_end":476,"line_start":12,"line_end":12,"column_start":52,"column_end":56,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":52,"highlight_end":56}],"label":null,"suggested_replacement":"_istr","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `istr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:12:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_istr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `dh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":486,"byte_end":488,"line_start":12,"line_end":12,"column_start":66,"column_end":68,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":66,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":486,"byte_end":488,"line_start":12,"line_end":12,"column_start":66,"column_end":68,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":66,"highlight_end":68}],"label":null,"suggested_replacement":"_dh","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dh`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:12:66\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dh`\u001b[0m\n\n"}
{"message":"unused variable: `system_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":498,"byte_end":507,"line_start":12,"line_end":12,"column_start":78,"column_end":87,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":78,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":498,"byte_end":507,"line_start":12,"line_end":12,"column_start":78,"column_end":87,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":78,"highlight_end":87}],"label":null,"suggested_replacement":"_system_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `system_id`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:12:78\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_system_id`\u001b[0m\n\n"}
{"message":"unused variable: `istr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":599,"byte_end":603,"line_start":14,"line_end":14,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":599,"byte_end":603,"line_start":14,"line_end":14,"column_start":62,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":62,"highlight_end":66}],"label":null,"suggested_replacement":"_istr","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `istr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:14:62\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_istr`\u001b[0m\n\n"}
{"message":"unused variable: `dh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":613,"byte_end":615,"line_start":14,"line_end":14,"column_start":76,"column_end":78,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":76,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":613,"byte_end":615,"line_start":14,"line_end":14,"column_start":76,"column_end":78,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":76,"highlight_end":78}],"label":null,"suggested_replacement":"_dh","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dh`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:14:76\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dh`\u001b[0m\n\n"}
{"message":"unused variable: `system_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":625,"byte_end":634,"line_start":14,"line_end":14,"column_start":88,"column_end":97,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":88,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":625,"byte_end":634,"line_start":14,"line_end":14,"column_start":88,"column_end":97,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)","highlight_start":88,"highlight_end":97}],"label":null,"suggested_replacement":"_system_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `system_id`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:14:88\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_stream_default_handler_system_id(istr: String, dh: String, system_id: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_system_id`\u001b[0m\n\n"}
{"message":"unused variable: `uri`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":787,"byte_end":790,"line_start":18,"line_end":18,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":43,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":787,"byte_end":790,"line_start":18,"line_end":18,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":43,"highlight_end":46}],"label":null,"suggested_replacement":"_uri","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `uri`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:18:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_uri`\u001b[0m\n\n"}
{"message":"unused variable: `dh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":800,"byte_end":802,"line_start":18,"line_end":18,"column_start":56,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":56,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":800,"byte_end":802,"line_start":18,"line_end":18,"column_start":56,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":56,"highlight_end":58}],"label":null,"suggested_replacement":"_dh","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dh`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:18:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_uri_default_handler(uri: String, dh: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dh`\u001b[0m\n\n"}
{"message":"unused variable: `uri`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":955,"byte_end":958,"line_start":22,"line_end":22,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":44,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":955,"byte_end":958,"line_start":22,"line_end":22,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":44,"highlight_end":47}],"label":null,"suggested_replacement":"_uri","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `uri`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:22:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_uri`\u001b[0m\n\n"}
{"message":"unused variable: `dh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":968,"byte_end":970,"line_start":22,"line_end":22,"column_start":57,"column_end":59,"is_primary":true,"text":[{"text":"    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":57,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":968,"byte_end":970,"line_start":22,"line_end":22,"column_start":57,"column_end":59,"is_primary":true,"text":[{"text":"    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)","highlight_start":57,"highlight_end":59}],"label":null,"suggested_replacement":"_dh","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dh`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:22:57\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_file_default_handler(uri: String, dh: String) { // (iso, dh)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dh`\u001b[0m\n\n"}
{"message":"unused variable: `iso`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":1153,"byte_end":1156,"line_start":26,"line_end":26,"column_start":52,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)","highlight_start":52,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":1153,"byte_end":1156,"line_start":26,"line_end":26,"column_start":52,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)","highlight_start":52,"highlight_end":55}],"label":null,"suggested_replacement":"_iso","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `iso`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:26:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_iso`\u001b[0m\n\n"}
{"message":"unused variable: `dh`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":1166,"byte_end":1168,"line_start":26,"line_end":26,"column_start":65,"column_end":67,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)","highlight_start":65,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser.rs","byte_start":1166,"byte_end":1168,"line_start":26,"line_end":26,"column_start":65,"column_end":67,"is_primary":true,"text":[{"text":"    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)","highlight_start":65,"highlight_end":67}],"label":null,"suggested_replacement":"_dh","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `dh`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser.rs:26:65\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn parse_with_input_source_default_handler(iso: String, dh: String) { // get_xml_reader.parse(iso)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_dh`\u001b[0m\n\n"}
{"message":"unused variable: `feature_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_parser.rs","byte_start":972,"byte_end":982,"line_start":29,"line_end":29,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn get_feature(&self, feature_id: String) -> bool {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/xml_parser.rs","byte_start":972,"byte_end":982,"line_start":29,"line_end":29,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"    pub fn get_feature(&self, feature_id: String) -> bool {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":"_feature_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `feature_id`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_parser.rs:29:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_feature(&self, feature_id: String) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_feature_id`\u001b[0m\n\n"}
{"message":"unused variable: `resource_identifier`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1138,"byte_end":1157,"line_start":41,"line_end":41,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        resource_identifier: String","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1138,"byte_end":1157,"line_start":41,"line_end":41,"column_start":9,"column_end":28,"is_primary":true,"text":[{"text":"        resource_identifier: String","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":"_resource_identifier","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `resource_identifier`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_input_source.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        resource_identifier: String\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_resource_identifier`\u001b[0m\n\n"}
{"message":"unused variable: `inputSource`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1433,"byte_end":1444,"line_start":52,"line_end":52,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        inputSource: String,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1433,"byte_end":1444,"line_start":52,"line_end":52,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        inputSource: String,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"_inputSource","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `inputSource`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_input_source.rs:52:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        inputSource: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_inputSource`\u001b[0m\n\n"}
{"message":"fields `validating` and `namespace_aware` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_factory.rs","byte_start":144,"byte_end":160,"line_start":4,"line_end":4,"column_start":12,"column_end":28,"is_primary":false,"text":[{"text":"pub struct SAXParserFactory {","highlight_start":12,"highlight_end":28}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory.rs","byte_start":167,"byte_end":177,"line_start":5,"line_end":5,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    validating: bool,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory.rs","byte_start":189,"byte_end":204,"line_start":6,"line_end":6,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    namespace_aware: bool,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `validating` and `namespace_aware` are never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_factory.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SAXParserFactory {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    validating: bool,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    namespace_aware: bool,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"fields `features`, `grammar`, `is_xinclude_aware` and `f_secure_process` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":259,"byte_end":279,"line_start":10,"line_end":10,"column_start":12,"column_end":32,"is_primary":false,"text":[{"text":"pub struct SAXParserFactoryImpl {","highlight_start":12,"highlight_end":32}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":286,"byte_end":294,"line_start":11,"line_end":11,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    features: HashMap<String, bool>,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":348,"byte_end":355,"line_start":13,"line_end":13,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    grammar: String, // Schema","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":379,"byte_end":396,"line_start":14,"line_end":14,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    is_xinclude_aware: bool,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":408,"byte_end":424,"line_start":15,"line_end":15,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    f_secure_process: bool,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `features`, `grammar`, `is_xinclude_aware` and `f_secure_process` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SAXParserFactoryImpl {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    features: HashMap<String, bool>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // TODO: Schema type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    grammar: String, // Schema\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    is_xinclude_aware: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_secure_process: bool,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `VALIDATION_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":473,"byte_end":491,"line_start":19,"line_end":19,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `VALIDATION_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:19:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `NAMESPACES_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":590,"byte_end":608,"line_start":20,"line_end":20,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `NAMESPACES_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XINCLUDE_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":707,"byte_end":723,"line_start":21,"line_end":21,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX, ImplConstants::XINCLUDE_FEATURE);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XINCLUDE_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX, ImplConstants::XINCLUDE_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `NAMESPACES_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1156,"byte_end":1174,"line_start":37,"line_end":37,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `NAMESPACES_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:37:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `NAMESPACE_PREFIXES_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1273,"byte_end":1299,"line_start":38,"line_end":38,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"    const NAMESPACE_PREFIXES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACE_PREFIXES_FEATURE);","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `NAMESPACE_PREFIXES_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:38:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACE_PREFIXES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACE_PREFIXES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `VALIDATION_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1406,"byte_end":1424,"line_start":39,"line_end":39,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `VALIDATION_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:39:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XMLSCHEMA_VALIDATION_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1523,"byte_end":1551,"line_start":40,"line_end":40,"column_start":11,"column_end":39,"is_primary":true,"text":[{"text":"    const XMLSCHEMA_VALIDATION_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SCHEMA_VALIDATION_FEATURE);","highlight_start":11,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XMLSCHEMA_VALIDATION_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:40:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XMLSCHEMA_VALIDATION_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SCHEMA_VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XINCLUDE_FEATURE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1661,"byte_end":1677,"line_start":41,"line_end":41,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::XINCLUDE_FEATURE);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XINCLUDE_FEATURE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:41:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::XINCLUDE_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `SECURITY_MANAGER` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1778,"byte_end":1794,"line_start":42,"line_end":42,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"    const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SECURITY_MANAGER_PROPERTY);","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `SECURITY_MANAGER` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:42:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SECURITY_MANAGER_PROPERTY);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XML_SECURITY_PROPERTY_MANAGER` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1904,"byte_end":1933,"line_start":43,"line_end":43,"column_start":11,"column_end":40,"is_primary":true,"text":[{"text":"    const XML_SECURITY_PROPERTY_MANAGER: &str = JdkConstants::XML_SECURITY_PROPERTY_MANAGER;","highlight_start":11,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XML_SECURITY_PROPERTY_MANAGER` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:43:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XML_SECURITY_PROPERTY_MANAGER: &str = JdkConstants::XML_SECURITY_PROPERTY_MANAGER;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `NULL_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":122,"byte_end":133,"line_start":8,"line_end":8,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    const NULL_NS_URI: &str = \"\";","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `NULL_NS_URI` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:8:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NULL_NS_URI: &str = \"\";\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `DEFAULT_NS_PREFIX` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":156,"byte_end":173,"line_start":9,"line_end":9,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"    const DEFAULT_NS_PREFIX: &str = \"\";","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `DEFAULT_NS_PREFIX` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:9:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const DEFAULT_NS_PREFIX: &str = \"\";\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XML_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":196,"byte_end":206,"line_start":10,"line_end":10,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"    const XML_NS_URI: &str = \"http://www.w3.org/XML/1998/namespace\";","highlight_start":11,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XML_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:10:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XML_NS_URI: &str = \"http://www.w3.org/XML/1998/namespace\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XML_NS_PREFIX` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":265,"byte_end":278,"line_start":11,"line_end":11,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"    const XML_NS_PREFIX: &str = \"xml\";","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XML_NS_PREFIX` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:11:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XML_NS_PREFIX: &str = \"xml\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XMLNS_ATTRIBUTE_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":304,"byte_end":326,"line_start":12,"line_end":12,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    const XMLNS_ATTRIBUTE_NS_URI: &str = \"http://www.w3.org/2000/xmlns/\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XMLNS_ATTRIBUTE_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:12:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XMLNS_ATTRIBUTE_NS_URI: &str = \"http://www.w3.org/2000/xmlns/\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XMLNS_ATTRIBUTE` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":378,"byte_end":393,"line_start":13,"line_end":13,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"    const XMLNS_ATTRIBUTE: &str = \"xmlns\";","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XMLNS_ATTRIBUTE` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:13:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XMLNS_ATTRIBUTE: &str = \"xmlns\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `W3C_XML_SCHEMA_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":421,"byte_end":442,"line_start":14,"line_end":14,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"    const W3C_XML_SCHEMA_NS_URI: &str = \"http://www.w3.org/2001/XMLSchema\";","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `W3C_XML_SCHEMA_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:14:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const W3C_XML_SCHEMA_NS_URI: &str = \"http://www.w3.org/2001/XMLSchema\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `W3C_XML_SCHEMA_INSTANCE_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":497,"byte_end":527,"line_start":15,"line_end":15,"column_start":11,"column_end":41,"is_primary":true,"text":[{"text":"    const W3C_XML_SCHEMA_INSTANCE_NS_URI: &str = \"http://www.w3.org/2001/XMLSchema-instance\";","highlight_start":11,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `W3C_XML_SCHEMA_INSTANCE_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:15:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const W3C_XML_SCHEMA_INSTANCE_NS_URI: &str = \"http://www.w3.org/2001/XMLSchema-instance\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `W3C_XPATH_DATATYPE_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":591,"byte_end":616,"line_start":16,"line_end":16,"column_start":11,"column_end":36,"is_primary":true,"text":[{"text":"    const W3C_XPATH_DATATYPE_NS_URI: &str = \"http://www.w3.org/2003/11/xpath-datatypes\";","highlight_start":11,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `W3C_XPATH_DATATYPE_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:16:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const W3C_XPATH_DATATYPE_NS_URI: &str = \"http://www.w3.org/2003/11/xpath-datatypes\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `XML_DTD_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":680,"byte_end":694,"line_start":17,"line_end":17,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    const XML_DTD_NS_URI: &str = \"http://www.w3.org/TR/REC-xml\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `XML_DTD_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:17:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XML_DTD_NS_URI: &str = \"http://www.w3.org/TR/REC-xml\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `RELAXNG_NS_URI` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":745,"byte_end":759,"line_start":18,"line_end":18,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"    const RELAXNG_NS_URI: &str = \"http://relaxng.org/ns/structure/1.0\";","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `RELAXNG_NS_URI` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:18:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const RELAXNG_NS_URI: &str = \"http://relaxng.org/ns/structure/1.0\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `FEATURE_SECURE_PROCESSING` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":817,"byte_end":842,"line_start":19,"line_end":19,"column_start":11,"column_end":36,"is_primary":true,"text":[{"text":"    const FEATURE_SECURE_PROCESSING: &str = \"http://javax.xml.XMLConstants/feature/secure-processing\";","highlight_start":11,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `FEATURE_SECURE_PROCESSING` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:19:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const FEATURE_SECURE_PROCESSING: &str = \"http://javax.xml.XMLConstants/feature/secure-processing\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `ACCESS_EXTERNAL_DTD` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":920,"byte_end":939,"line_start":20,"line_end":20,"column_start":11,"column_end":30,"is_primary":true,"text":[{"text":"    const ACCESS_EXTERNAL_DTD: &str = \"http://javax.xml.XMLConstants/property/accessExternalDTD\";","highlight_start":11,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `ACCESS_EXTERNAL_DTD` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const ACCESS_EXTERNAL_DTD: &str = \"http://javax.xml.XMLConstants/property/accessExternalDTD\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `ACCESS_EXTERNAL_SCHEMA` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":1018,"byte_end":1040,"line_start":21,"line_end":21,"column_start":11,"column_end":33,"is_primary":true,"text":[{"text":"    const ACCESS_EXTERNAL_SCHEMA: &str = \"http://javax.xml.XMLConstants/property/accessExternalSchema\";","highlight_start":11,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `ACCESS_EXTERNAL_SCHEMA` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:21:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const ACCESS_EXTERNAL_SCHEMA: &str = \"http://javax.xml.XMLConstants/property/accessExternalSchema\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `ACCESS_EXTERNAL_STYLESHEET` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":1122,"byte_end":1148,"line_start":22,"line_end":22,"column_start":11,"column_end":37,"is_primary":true,"text":[{"text":"    const ACCESS_EXTERNAL_STYLESHEET: &str = \"http://javax.xml.XMLConstants/property/accessExternalStylesheet\";","highlight_start":11,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `ACCESS_EXTERNAL_STYLESHEET` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:22:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const ACCESS_EXTERNAL_STYLESHEET: &str = \"http://javax.xml.XMLConstants/property/accessExternalStylesheet\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `USE_CATALOG` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_constants.rs","byte_start":1234,"byte_end":1245,"line_start":23,"line_end":23,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    const USE_CATALOG: &str = \"http://javax.xml.XMLConstants/feature/useCatalog\";","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `USE_CATALOG` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_constants.rs:23:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const USE_CATALOG: &str = \"http://javax.xml.XMLConstants/feature/useCatalog\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `fg_SAX_features` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13047,"byte_end":13062,"line_start":230,"line_end":230,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"    const fg_SAX_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_SAX_features` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:230:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_SAX_features: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `fg_SAX_properties` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13415,"byte_end":13432,"line_start":239,"line_end":239,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"    const fg_SAX_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_SAX_properties` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:239:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_SAX_properties: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `fg_xerces_features` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13669,"byte_end":13687,"line_start":246,"line_end":246,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const fg_xerces_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_xerces_features` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:246:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_xerces_features: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated constant `fg_xerces_properties` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":15511,"byte_end":15531,"line_start":283,"line_end":283,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"    const fg_xerces_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_xerces_properties` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:283:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_xerces_properties: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"fields `security_manager` and `security_property_manager` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_parser.rs","byte_start":272,"byte_end":281,"line_start":7,"line_end":7,"column_start":12,"column_end":21,"is_primary":false,"text":[{"text":"pub struct XMLParser<C: XMLParserConfiguration> {","highlight_start":12,"highlight_end":21}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_parser.rs","byte_start":366,"byte_end":382,"line_start":11,"line_end":11,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    security_manager: String,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_parser.rs","byte_start":409,"byte_end":434,"line_start":13,"line_end":13,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"    security_property_manager: String,","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `security_manager` and `security_property_manager` are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_parser.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct XMLParser<C: XMLParserConfiguration> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    security_manager: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // TODO:\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    security_property_manager: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"multiple fields are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":261,"byte_end":275,"line_start":7,"line_end":7,"column_start":12,"column_end":26,"is_primary":false,"text":[{"text":"pub struct XMLInputSource {","highlight_start":12,"highlight_end":26}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":305,"byte_end":316,"line_start":9,"line_end":9,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    f_public_id: String,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":330,"byte_end":341,"line_start":10,"line_end":10,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    f_system_id: String,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":355,"byte_end":371,"line_start":11,"line_end":11,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    f_base_system_id: String,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":410,"byte_end":423,"line_start":13,"line_end":13,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    f_byte_stream: Option<String>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":465,"byte_end":478,"line_start":15,"line_end":15,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    f_char_stream: Option<String>,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":500,"byte_end":510,"line_start":16,"line_end":16,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    f_encoding: String,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"sax/src/xml_input_source.rs","byte_start":524,"byte_end":548,"line_start":17,"line_end":17,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    f_is_created_by_resolver: bool, // default: false","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple fields are never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_input_source.rs:9:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct XMLInputSource {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // TODO: protected\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_public_id: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_system_id: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_base_system_id: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // TODO: inputstream\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_byte_stream: Option<String>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // TODO: reader\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_char_stream: Option<String>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_encoding: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    f_is_created_by_resolver: bool, // default: false\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":500,"byte_end":578,"line_start":19,"line_end":19,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(clippy::transmute_bytes_to_str)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":500,"byte_end":578,"line_start":19,"line_end":19,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:19:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::transmute_bytes_to_str)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":617,"byte_end":695,"line_start":20,"line_end":20,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":617,"byte_end":695,"line_start":20,"line_end":20,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:20:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":732,"byte_end":811,"line_start":21,"line_end":21,"column_start":36,"column_end":115,"is_primary":false,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX, ImplConstants::XINCLUDE_FEATURE);","highlight_start":36,"highlight_end":115}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_factory_impl.rs","byte_start":732,"byte_end":811,"line_start":21,"line_end":21,"column_start":36,"column_end":115,"is_primary":false,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX, ImplConstants::XINCLUDE_FEATURE);","highlight_start":36,"highlight_end":115}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/sax_parser_factory_impl.rs:21:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX, ImplConstants::XINCLUDE_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1183,"byte_end":1261,"line_start":37,"line_end":37,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1183,"byte_end":1261,"line_start":37,"line_end":37,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1308,"byte_end":1394,"line_start":38,"line_end":38,"column_start":46,"column_end":132,"is_primary":false,"text":[{"text":"    const NAMESPACE_PREFIXES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACE_PREFIXES_FEATURE);","highlight_start":46,"highlight_end":132}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1308,"byte_end":1394,"line_start":38,"line_end":38,"column_start":46,"column_end":132,"is_primary":false,"text":[{"text":"    const NAMESPACE_PREFIXES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACE_PREFIXES_FEATURE);","highlight_start":46,"highlight_end":132}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const NAMESPACE_PREFIXES_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::NAMESPACE_PREFIXES_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1433,"byte_end":1511,"line_start":39,"line_end":39,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1433,"byte_end":1511,"line_start":39,"line_end":39,"column_start":38,"column_end":116,"is_primary":false,"text":[{"text":"    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);","highlight_start":38,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const VALIDATION_FEATURE: &str = combine!(ImplConstants::SAX_FEATURE_PREFIX, ImplConstants::VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1560,"byte_end":1649,"line_start":40,"line_end":40,"column_start":48,"column_end":137,"is_primary":false,"text":[{"text":"    const XMLSCHEMA_VALIDATION_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SCHEMA_VALIDATION_FEATURE);","highlight_start":48,"highlight_end":137}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1560,"byte_end":1649,"line_start":40,"line_end":40,"column_start":48,"column_end":137,"is_primary":false,"text":[{"text":"    const XMLSCHEMA_VALIDATION_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SCHEMA_VALIDATION_FEATURE);","highlight_start":48,"highlight_end":137}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XMLSCHEMA_VALIDATION_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SCHEMA_VALIDATION_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1686,"byte_end":1766,"line_start":41,"line_end":41,"column_start":36,"column_end":116,"is_primary":false,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::XINCLUDE_FEATURE);","highlight_start":36,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1686,"byte_end":1766,"line_start":41,"line_end":41,"column_start":36,"column_end":116,"is_primary":false,"text":[{"text":"    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::XINCLUDE_FEATURE);","highlight_start":36,"highlight_end":116}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const XINCLUDE_FEATURE: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::XINCLUDE_FEATURE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1803,"byte_end":1892,"line_start":42,"line_end":42,"column_start":36,"column_end":125,"is_primary":false,"text":[{"text":"    const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SECURITY_MANAGER_PROPERTY);","highlight_start":36,"highlight_end":125}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/sax_parser_impl.rs","byte_start":941,"byte_end":968,"line_start":26,"line_end":26,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":1803,"byte_end":1892,"line_start":42,"line_end":42,"column_start":36,"column_end":125,"is_primary":false,"text":[{"text":"    const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SECURITY_MANAGER_PROPERTY);","highlight_start":36,"highlight_end":125}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/sax_parser_impl.rs","byte_start":83,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/sax_parser_impl.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_FEATURE_PREFIX , ImplConstants::SECURITY_MANAGER_PROPERTY);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/impl_constants.rs","byte_start":1131,"byte_end":1205,"line_start":30,"line_end":30,"column_start":47,"column_end":121,"is_primary":false,"text":[{"text":"    pub const READER_IN_DEFINED_STATE: &str = combine!(ImplConstants::ZEPHYR_PROPERTY_PREFIX, \"reader-in-defined-state\");","highlight_start":47,"highlight_end":121}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/impl_constants.rs","byte_start":1131,"byte_end":1205,"line_start":30,"line_end":30,"column_start":47,"column_end":121,"is_primary":false,"text":[{"text":"    pub const READER_IN_DEFINED_STATE: &str = combine!(ImplConstants::ZEPHYR_PROPERTY_PREFIX, \"reader-in-defined-state\");","highlight_start":47,"highlight_end":121}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/impl_constants.rs:30:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const READER_IN_DEFINED_STATE: &str = combine!(ImplConstants::ZEPHYR_PROPERTY_PREFIX, \"reader-in-defined-state\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/impl_constants.rs","byte_start":10564,"byte_end":10653,"line_start":186,"line_end":186,"column_start":40,"column_end":129,"is_primary":false,"text":[{"text":"    pub const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::SECURITY_MANAGER_PROPERTY);","highlight_start":40,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/impl_constants.rs","byte_start":10564,"byte_end":10653,"line_start":186,"line_end":186,"column_start":40,"column_end":129,"is_primary":false,"text":[{"text":"    pub const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::SECURITY_MANAGER_PROPERTY);","highlight_start":40,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/impl_constants.rs:186:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const SECURITY_MANAGER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::SECURITY_MANAGER_PROPERTY);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":658,"byte_end":733,"line_start":20,"line_end":20,"column_start":50,"column_end":125,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_EXPANSION_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityExpansionLimit\");","highlight_start":50,"highlight_end":125}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":658,"byte_end":733,"line_start":20,"line_end":20,"column_start":50,"column_end":125,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_EXPANSION_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityExpansionLimit\");","highlight_start":50,"highlight_end":125}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:20:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_ENTITY_EXPANSION_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityExpansionLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":818,"byte_end":894,"line_start":22,"line_end":22,"column_start":51,"column_end":127,"is_primary":false,"text":[{"text":"    pub const JDK_ELEMENT_ATTRIBUTE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"elementAttributeLimit\");","highlight_start":51,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":818,"byte_end":894,"line_start":22,"line_end":22,"column_start":51,"column_end":127,"is_primary":false,"text":[{"text":"    pub const JDK_ELEMENT_ATTRIBUTE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"elementAttributeLimit\");","highlight_start":51,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:22:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_ELEMENT_ATTRIBUTE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"elementAttributeLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":971,"byte_end":1039,"line_start":24,"line_end":24,"column_start":43,"column_end":111,"is_primary":false,"text":[{"text":"    pub const JDK_MAX_OCCUR_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxOccurLimit\");","highlight_start":43,"highlight_end":111}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":971,"byte_end":1039,"line_start":24,"line_end":24,"column_start":43,"column_end":111,"is_primary":false,"text":[{"text":"    pub const JDK_MAX_OCCUR_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxOccurLimit\");","highlight_start":43,"highlight_end":111}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:24:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_MAX_OCCUR_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxOccurLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1124,"byte_end":1199,"line_start":26,"line_end":26,"column_start":51,"column_end":126,"is_primary":false,"text":[{"text":"    pub const JDK_TOTAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"totalEntitySizeLimit\");","highlight_start":51,"highlight_end":126}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1124,"byte_end":1199,"line_start":26,"line_end":26,"column_start":51,"column_end":126,"is_primary":false,"text":[{"text":"    pub const JDK_TOTAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"totalEntitySizeLimit\");","highlight_start":51,"highlight_end":126}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:26:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_TOTAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"totalEntitySizeLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1286,"byte_end":1366,"line_start":28,"line_end":28,"column_start":53,"column_end":133,"is_primary":false,"text":[{"text":"    pub const JDK_GENERAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxGeneralEntitySizeLimit\");","highlight_start":53,"highlight_end":133}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1286,"byte_end":1366,"line_start":28,"line_end":28,"column_start":53,"column_end":133,"is_primary":false,"text":[{"text":"    pub const JDK_GENERAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxGeneralEntitySizeLimit\");","highlight_start":53,"highlight_end":133}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:28:53\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_GENERAL_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxGeneralEntitySizeLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1452,"byte_end":1529,"line_start":30,"line_end":30,"column_start":52,"column_end":129,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_REPLACEMENT_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityReplacementLimit\");","highlight_start":52,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1452,"byte_end":1529,"line_start":30,"line_end":30,"column_start":52,"column_end":129,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_REPLACEMENT_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityReplacementLimit\");","highlight_start":52,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:30:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_ENTITY_REPLACEMENT_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"entityReplacementLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1618,"byte_end":1700,"line_start":32,"line_end":32,"column_start":55,"column_end":137,"is_primary":false,"text":[{"text":"    pub const JDK_PARAMETER_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxParameterEntitySizeLimit\");","highlight_start":55,"highlight_end":137}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1618,"byte_end":1700,"line_start":32,"line_end":32,"column_start":55,"column_end":137,"is_primary":false,"text":[{"text":"    pub const JDK_PARAMETER_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxParameterEntitySizeLimit\");","highlight_start":55,"highlight_end":137}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:32:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_PARAMETER_ENTITY_SIZE_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxParameterEntitySizeLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1776,"byte_end":1846,"line_start":34,"line_end":34,"column_start":42,"column_end":112,"is_primary":false,"text":[{"text":"    pub const JDK_XML_NAME_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxXMLNameLimit\");","highlight_start":42,"highlight_end":112}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1776,"byte_end":1846,"line_start":34,"line_end":34,"column_start":42,"column_end":112,"is_primary":false,"text":[{"text":"    pub const JDK_XML_NAME_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxXMLNameLimit\");","highlight_start":42,"highlight_end":112}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:34:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_XML_NAME_LIMIT: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxXMLNameLimit\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1925,"byte_end":1995,"line_start":36,"line_end":36,"column_start":45,"column_end":115,"is_primary":false,"text":[{"text":"    pub const JDK_MAX_ELEMENT_DEPTH: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxElementDepth\");","highlight_start":45,"highlight_end":115}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":1925,"byte_end":1995,"line_start":36,"line_end":36,"column_start":45,"column_end":115,"is_primary":false,"text":[{"text":"    pub const JDK_MAX_ELEMENT_DEPTH: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxElementDepth\");","highlight_start":45,"highlight_end":115}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:36:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_MAX_ELEMENT_DEPTH: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"maxElementDepth\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":2074,"byte_end":2147,"line_start":38,"line_end":38,"column_start":45,"column_end":118,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_COUNT_INFO: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"getEntityCountInfo\");","highlight_start":45,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":2074,"byte_end":2147,"line_start":38,"line_end":38,"column_start":45,"column_end":118,"is_primary":false,"text":[{"text":"    pub const JDK_ENTITY_COUNT_INFO: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"getEntityCountInfo\");","highlight_start":45,"highlight_end":118}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:38:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const JDK_ENTITY_COUNT_INFO: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"getEntityCountInfo\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":4543,"byte_end":4625,"line_start":81,"line_end":81,"column_start":40,"column_end":122,"is_primary":false,"text":[{"text":"    pub const FQ_IS_STANDALONE: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, JdkConstants::S_IS_STANDALONE);","highlight_start":40,"highlight_end":122}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":4543,"byte_end":4625,"line_start":81,"line_end":81,"column_start":40,"column_end":122,"is_primary":false,"text":[{"text":"    pub const FQ_IS_STANDALONE: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, JdkConstants::S_IS_STANDALONE);","highlight_start":40,"highlight_end":122}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:81:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const FQ_IS_STANDALONE: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, JdkConstants::S_IS_STANDALONE);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":4973,"byte_end":5052,"line_start":89,"line_end":89,"column_start":56,"column_end":135,"is_primary":false,"text":[{"text":"    pub const ORACLE_ENABLE_EXTENSION_FUNCTION: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"enableExtensionFunctions\");","highlight_start":56,"highlight_end":135}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/jdk_constants.rs","byte_start":4973,"byte_end":5052,"line_start":89,"line_end":89,"column_start":56,"column_end":135,"is_primary":false,"text":[{"text":"    pub const ORACLE_ENABLE_EXTENSION_FUNCTION: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"enableExtensionFunctions\");","highlight_start":56,"highlight_end":135}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/jdk_constants.rs:89:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const ORACLE_ENABLE_EXTENSION_FUNCTION: &str = combine!(JdkConstants::ORACLE_JAXP_PROPERTY_PREFIX, \"enableExtensionFunctions\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/xml_parser.rs","byte_start":565,"byte_end":653,"line_start":21,"line_end":21,"column_start":39,"column_end":127,"is_primary":false,"text":[{"text":"    pub const ENTITY_RESOLVER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ENTITY_RESOLVER_PROPERTY);","highlight_start":39,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/xml_parser.rs","byte_start":565,"byte_end":653,"line_start":21,"line_end":21,"column_start":39,"column_end":127,"is_primary":false,"text":[{"text":"    pub const ENTITY_RESOLVER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ENTITY_RESOLVER_PROPERTY);","highlight_start":39,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/xml_parser.rs:21:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const ENTITY_RESOLVER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ENTITY_RESOLVER_PROPERTY);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"transmute from a `&[u8]` to a `&str`","code":{"code":"clippy::transmute_bytes_to_str","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"sax/src/xml_parser.rs","byte_start":691,"byte_end":777,"line_start":22,"line_end":22,"column_start":37,"column_end":123,"is_primary":false,"text":[{"text":"    pub const ERROR_HANDLER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ERROR_HANDLER_PROPERTY);","highlight_start":37,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using","code":null,"level":"help","spans":[{"file_name":"sax/src/combine.rs","byte_start":875,"byte_end":902,"line_start":25,"line_end":25,"column_start":43,"column_end":70,"is_primary":true,"text":[{"text":"        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };","highlight_start":43,"highlight_end":70}],"label":null,"suggested_replacement":"std::str::from_utf8_unchecked(RESULT)","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"sax/src/xml_parser.rs","byte_start":691,"byte_end":777,"line_start":22,"line_end":22,"column_start":37,"column_end":123,"is_primary":false,"text":[{"text":"    pub const ERROR_HANDLER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ERROR_HANDLER_PROPERTY);","highlight_start":37,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"combine!","def_site_span":{"file_name":"sax/src/combine.rs","byte_start":17,"byte_end":37,"line_start":3,"line_end":3,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! combine {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: transmute from a `&[u8]` to a `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/combine.rs:25:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        const RESULT_STR: &str = unsafe { std::mem::transmute(RESULT) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using: `std::str::from_utf8_unchecked(RESULT)`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0msax/src/xml_parser.rs:22:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const ERROR_HANDLER: &str = combine!(ImplConstants::XERCES_PROPERTY_PREFIX, ImplConstants::ERROR_HANDLER_PROPERTY);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_bytes_to_str\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `combine` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"associated constant `fg_SAX_features` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13047,"byte_end":13062,"line_start":230,"line_end":230,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"    const fg_SAX_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13047,"byte_end":13062,"line_start":230,"line_end":230,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"    const fg_SAX_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"FG_SAX_FEATURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_SAX_features` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:230:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_SAX_features: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FG_SAX_FEATURES`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"associated constant `fg_SAX_properties` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13415,"byte_end":13432,"line_start":239,"line_end":239,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"    const fg_SAX_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13415,"byte_end":13432,"line_start":239,"line_end":239,"column_start":11,"column_end":28,"is_primary":true,"text":[{"text":"    const fg_SAX_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":28}],"label":null,"suggested_replacement":"FG_SAX_PROPERTIES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_SAX_properties` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:239:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_SAX_properties: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FG_SAX_PROPERTIES`\u001b[0m\n\n"}
{"message":"associated constant `fg_xerces_features` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13669,"byte_end":13687,"line_start":246,"line_end":246,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const fg_xerces_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":13669,"byte_end":13687,"line_start":246,"line_end":246,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"    const fg_xerces_features: &'static [&'static str] = &[","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"FG_XERCES_FEATURES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_xerces_features` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:246:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_xerces_features: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FG_XERCES_FEATURES`\u001b[0m\n\n"}
{"message":"associated constant `fg_xerces_properties` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":15511,"byte_end":15531,"line_start":283,"line_end":283,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"    const fg_xerces_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"sax/src/impl_constants.rs","byte_start":15511,"byte_end":15531,"line_start":283,"line_end":283,"column_start":11,"column_end":31,"is_primary":true,"text":[{"text":"    const fg_xerces_properties: &'static [&'static str] = &[","highlight_start":11,"highlight_end":31}],"label":null,"suggested_replacement":"FG_XERCES_PROPERTIES","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `fg_xerces_properties` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/impl_constants.rs:283:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const fg_xerces_properties: &'static [&'static str] = &[\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `FG_XERCES_PROPERTIES`\u001b[0m\n\n"}
{"message":"variable `inputSource` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1433,"byte_end":1444,"line_start":52,"line_end":52,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        inputSource: String,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"sax/src/xml_input_source.rs","byte_start":1433,"byte_end":1444,"line_start":52,"line_end":52,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        inputSource: String,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"input_source","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `inputSource` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msax/src/xml_input_source.rs:52:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        inputSource: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `input_source`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"80 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 80 warnings emitted\u001b[0m\n\n"}
